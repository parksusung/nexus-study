### This file was generated by Nexus Schema
### Do not make changes to this file directly


type AccountInfo {
  accountHolder: String!
  accountNumber: String!
  bankName: String!
}

type Admin {
  created_at: DateTime!
  id: Int!
  login_id: String!
  state: AdminState!
}

input AdminOrderByWithRelationInput {
  created_at: SortOrder
  created_token: SortOrder
  id: SortOrder
  login_id: SortOrder
  password: SortOrder
  product: ProductOrderByRelationAggregateInput
  state: SortOrder
  token: SortOrder
}

enum AdminState {
  ACTIVE
  DELETED
}

input AdminWhereInput {
  AND: [AdminWhereInput!]
  NOT: [AdminWhereInput!]
  OR: [AdminWhereInput!]
  created_at: DateTimeFilter
  created_token: DateTimeNullableFilter
  id: IntFilter
  login_id: StringFilter
  password: StringFilter
  product: ProductListRelationFilter
  state: EnumAdminStateFilter
  token: StringNullableFilter
}

input BoolFilter {
  equals: Boolean
  not: NestedBoolFilter
}

type Category {
  a077_code: String!
  b378_code: Int!
  c1: String!
  c1_name: String!
  c2: String!
  c2_name: String!
  c3: String!
  c3_name: String!
  c4: String!
  c4_name: String!
  code: String!
  id: Int!
  siil_code: String!
}

type CategoryInformationType {
  code: String!
  code_a001: String
  code_a006: String
  code_a027: String
  code_a077: String
  code_a112: String
  code_a113: String
  code_a524: String
  code_a525: String
  code_b378: String
  code_b719: String
  code_b956: String
  depth1: String!
  depth2: String!
  depth3: String!
  depth4: String!
  depth5: String!
  depth6: String!
  id: String!
  name: String!
}

input CategoryOrderByWithRelationInput {
  a077_code: SortOrder
  a112_code: SortOrder
  b378_code: SortOrder
  c1: SortOrder
  c1_name: SortOrder
  c2: SortOrder
  c2_name: SortOrder
  c3: SortOrder
  c3_name: SortOrder
  c4: SortOrder
  c4_name: SortOrder
  code: SortOrder
  id: SortOrder
  product: ProductOrderByRelationAggregateInput
  siil_code: SortOrder
}

type CategorySelectType {
  code: String!
  name: String!
}

input CategoryWhereInput {
  AND: [CategoryWhereInput!]
  NOT: [CategoryWhereInput!]
  OR: [CategoryWhereInput!]
  a077_code: StringFilter
  a112_code: IntFilter
  b378_code: IntFilter
  c1: StringFilter
  c1_name: StringFilter
  c2: StringFilter
  c2_name: StringFilter
  c3: StringFilter
  c3_name: StringFilter
  c4: StringFilter
  c4_name: StringFilter
  code: StringFilter
  id: IntFilter
  product: ProductListRelationFilter
  siil_code: StringFilter
}

"""
A date-time string at UTC, such as 2007-12-03T10:15:30Z, compliant with the `date-time` format outlined in section 5.6 of the RFC 3339 profile of the ISO 8601 standard for representation of dates and times using the Gregorian calendar.
"""
scalar DateTime

input DateTimeFilter {
  equals: DateTime
  gt: DateTime
  gte: DateTime
  in: [DateTime!]
  lt: DateTime
  lte: DateTime
  not: NestedDateTimeFilter
  notIn: [DateTime!]
}

input DateTimeNullableFilter {
  equals: DateTime
  gt: DateTime
  gte: DateTime
  in: [DateTime!]
  lt: DateTime
  lte: DateTime
  not: NestedDateTimeNullableFilter
  notIn: [DateTime!]
}

input EnumAdminStateFilter {
  equals: AdminState
  in: [AdminState!]
  not: NestedEnumAdminStateFilter
  notIn: [AdminState!]
}

input EnumProductStateFilter {
  equals: ProductState
  in: [ProductState!]
  not: NestedEnumProductStateFilter
  notIn: [ProductState!]
}

input EnumPurchaseLogStateFilter {
  equals: PurchaseLogState
  in: [PurchaseLogState!]
  not: NestedEnumPurchaseLogStateFilter
  notIn: [PurchaseLogState!]
}

input EnumPurchaseLogTypeFilter {
  equals: PurchaseLogType
  in: [PurchaseLogType!]
  not: NestedEnumPurchaseLogTypeFilter
  notIn: [PurchaseLogType!]
}

input EnumUserStateFilter {
  equals: UserState
  in: [UserState!]
  not: NestedEnumUserStateFilter
  notIn: [UserState!]
}

input FloatFilter {
  equals: Float
  gt: Float
  gte: Float
  in: [Float!]
  lt: Float
  lte: Float
  not: NestedFloatFilter
  notIn: [Float!]
}

input IntFilter {
  equals: Int
  gt: Int
  gte: Int
  in: [Int!]
  lt: Int
  lte: Int
  not: NestedIntFilter
  notIn: [Int!]
}

input IntNullableFilter {
  equals: Int
  gt: Int
  gte: Int
  in: [Int!]
  lt: Int
  lte: Int
  not: NestedIntNullableFilter
  notIn: [Int!]
}

type Mutation {
  changeMyPasswordByAdmin(currentPassword: String!, newPassword: String!): Boolean!
  changePasswordByUser(currentPassword: String!, newPassword: String!): Boolean!
  connectSocialIdByUser(socialId: String!, userType: UserSocialType!): User!
  requestPhoneVerificationByEveryone(phoneNumber: String!): Boolean!
  setMaxProductLimitByAdmin(
    """미설정시 무제한"""
    productLimit: Int
    userId: Int!
  ): Boolean!
  signInUserByEveryone(
    email: String!

    """소셜의 경우 그냥 빈 문자열"""
    password: String!
    userType: UserSocialType!
  ): SignInType!
  signOutUserByEveryone(accessToken: String!): String!
  signUpAdminByAdmin(id: String!, password: String!): Boolean!
  signUpUserByEveryone(email: String!, password: String!, phone: String!, verificationId: Int! = 0): SignInType!
  silentRefreshToken(refreshToken: String!): SignInType
  translateProductTextByUser(id: Int!, type: TranslateTargetEnumType!): String!
  translateProductsTextByUser(ids: [Int!]!, type: TranslateTargetEnumType!): String!
  updateMyDataByUser(additionalShippingFeeJeju: Int, asInformation: String, asTel: String, auctionFee: Float, cnyRate: Float, collectStock: Int, collectTimeout: Int, coupangAccessKey: String, coupangDefaultInbound: String, coupangDefaultOutbound: String, coupangFee: Float, coupangImageOpt: String, coupangLoginId: String, coupangMaximumBuyForPerson: Int, coupangOutboundShippingTimeDay: Int, coupangSecretKey: String, coupangUnionDeliveryType: String, coupangVendorId: String, defaultShippingFee: Int, descriptionShowTitle: String, discountAmount: Int, discountUnitType: String, esmplusAuctionId: String, esmplusGmarketId: String, esmplusMasterId: String, exchangeShippingFee: Int, extraShippingFee: Int, fixImageBottom: Upload, fixImageTop: Upload, gmarketFee: Float, interparkCertKey: String, interparkFee: Float, interparkSecretKey: String, lotteonApiKey: String, lotteonFee: Float, lotteonNormalFee: Float, lotteonVendorId: String, marginRate: Float, marginUnitType: String, naverFee: Float, naverOrigin: String, naverOriginCode: String, naverStoreOnly: String, naverStoreUrl: String, optionAlignTop: String, optionIndexType: Int, optionTwoWays: String, refundShippingFee: Int, streetApiKey: String, streetDefaultInbound: String, streetDefaultOutbound: String, streetFee: Float, streetNormalApiKey: String, streetNormalFee: Float, streetNormalInbound: String, streetNormalOutbound: String, streetSellerType: Int, tmonFee: Float, tmonId: String, wemakepriceFee: Float, wemakepriceId: String): Boolean!
  updateMyImageByUser(fixImageBottom: String, fixImageTop: String): Boolean!
  updatePhoneByUser(phone: String!, verificationId: Int!): Boolean!
  verifyPhoneByEveryone(phoneNumber: String!, verificationNumber: String!): Int!
}

input NestedBoolFilter {
  equals: Boolean
  not: NestedBoolFilter
}

input NestedDateTimeFilter {
  equals: DateTime
  gt: DateTime
  gte: DateTime
  in: [DateTime!]
  lt: DateTime
  lte: DateTime
  not: NestedDateTimeFilter
  notIn: [DateTime!]
}

input NestedDateTimeNullableFilter {
  equals: DateTime
  gt: DateTime
  gte: DateTime
  in: [DateTime!]
  lt: DateTime
  lte: DateTime
  not: NestedDateTimeNullableFilter
  notIn: [DateTime!]
}

input NestedEnumAdminStateFilter {
  equals: AdminState
  in: [AdminState!]
  not: NestedEnumAdminStateFilter
  notIn: [AdminState!]
}

input NestedEnumProductStateFilter {
  equals: ProductState
  in: [ProductState!]
  not: NestedEnumProductStateFilter
  notIn: [ProductState!]
}

input NestedEnumPurchaseLogStateFilter {
  equals: PurchaseLogState
  in: [PurchaseLogState!]
  not: NestedEnumPurchaseLogStateFilter
  notIn: [PurchaseLogState!]
}

input NestedEnumPurchaseLogTypeFilter {
  equals: PurchaseLogType
  in: [PurchaseLogType!]
  not: NestedEnumPurchaseLogTypeFilter
  notIn: [PurchaseLogType!]
}

input NestedEnumUserStateFilter {
  equals: UserState
  in: [UserState!]
  not: NestedEnumUserStateFilter
  notIn: [UserState!]
}

input NestedFloatFilter {
  equals: Float
  gt: Float
  gte: Float
  in: [Float!]
  lt: Float
  lte: Float
  not: NestedFloatFilter
  notIn: [Float!]
}

input NestedIntFilter {
  equals: Int
  gt: Int
  gte: Int
  in: [Int!]
  lt: Int
  lte: Int
  not: NestedIntFilter
  notIn: [Int!]
}

input NestedIntNullableFilter {
  equals: Int
  gt: Int
  gte: Int
  in: [Int!]
  lt: Int
  lte: Int
  not: NestedIntNullableFilter
  notIn: [Int!]
}

input NestedStringFilter {
  contains: String
  endsWith: String
  equals: String
  gt: String
  gte: String
  in: [String!]
  lt: String
  lte: String
  not: NestedStringFilter
  notIn: [String!]
  startsWith: String
}

input NestedStringNullableFilter {
  contains: String
  endsWith: String
  equals: String
  gt: String
  gte: String
  in: [String!]
  lt: String
  lte: String
  not: NestedStringNullableFilter
  notIn: [String!]
  startsWith: String
}

type PhoneVerification {
  created_at: DateTime!
  id: Int!
  tel: String!
  verification_number: String!
}

type PlanInfo {
  description: String!
  external_feature_variable_id: String
  id: Int!
  is_active: Boolean!
  month: Int!
  name: String!
  plan_level: Int
  price: Int!
}

type Product {
  admin: Admin
  admin_id: Int
  category: Category
  category_a001: String
  category_a001_name: String
  category_a006: String
  category_a006_name: String
  category_a027: String
  category_a027_name: String
  category_a077: String
  category_a077_name: String
  category_a112: String
  category_a112_name: String
  category_a113: String
  category_a113_name: String
  category_a524: String
  category_a524_name: String
  category_a525: String
  category_a525_name: String
  category_b378: String
  category_b378_name: String
  category_b719: String
  category_b719_name: String
  category_b956: String
  category_b956_name: String
  category_code: String
  cny_rate: Float!
  created_at: DateTime!
  description: String!
  id: Int!
  imageThumbnail: [String!]!
  image_thumbnail_data: String!
  is_image_translated: Boolean!
  is_name_translated: Boolean!
  local_shipping_code: Int
  local_shipping_fee: Int!
  margin_rate: Float!
  margin_unit_type: String
  modified_at: DateTime!
  name: String!
  optionInfoHtml: String!
  price: Int!
  product_code: String!
  product_option(cursor: ProductOptionWhereUniqueInput, orderBy: [ProductOptionOrderByWithRelationInput!], skip: Int, take: Int, where: ProductOptionWhereInput): [ProductOption!]!
  product_option_name(cursor: ProductOptionNameWhereUniqueInput, orderBy: [ProductOptionNameOrderByWithRelationInput!], skip: Int, take: Int, where: ProductOptionNameWhereInput): [ProductOptionName!]!
  search_tags: String
  shipping_fee: Int!
  siil_code: String
  siil_data: String
  state: ProductState!
  stock_updated_at: DateTime!
  taobao_product: TaobaoProduct!
  taobao_product_id: Int!
  user: User
  user_id: Int
}

input ProductListRelationFilter {
  every: ProductWhereInput
  none: ProductWhereInput
  some: ProductWhereInput
}

type ProductOption {
  id: Int!
  is_active: Boolean!
  name: String!
  option_string: String!
  option_value1_id: Int!
  option_value2_id: Int
  option_value3_id: Int
  price: Int!
  price_cny: Float!
  product: Product!
  product_id: Int!
  product_option1: ProductOptionValue!
  product_option2: ProductOptionValue
  product_option3: ProductOptionValue
  stock: Int
  taobao_sku_id: String!
}

input ProductOptionListRelationFilter {
  every: ProductOptionWhereInput
  none: ProductOptionWhereInput
  some: ProductOptionWhereInput
}

type ProductOptionName {
  id: Int!
  is_name_translated: Boolean!
  name: String!
  order: Int!
  product: Product!
  product_id: Int!
  product_option_value(cursor: ProductOptionValueWhereUniqueInput, orderBy: [ProductOptionValueOrderByWithRelationInput!], skip: Int, take: Int, where: ProductOptionValueWhereInput): [ProductOptionValue!]!
  taobao_pid: String!
}

input ProductOptionNameListRelationFilter {
  every: ProductOptionNameWhereInput
  none: ProductOptionNameWhereInput
  some: ProductOptionNameWhereInput
}

input ProductOptionNameOrderByRelationAggregateInput {
  _count: SortOrder
  count: SortOrder
}

input ProductOptionNameOrderByWithRelationInput {
  has_image: SortOrder
  id: SortOrder
  is_name_translated: SortOrder
  name: SortOrder
  order: SortOrder
  product: ProductOrderByWithRelationInput
  product_id: SortOrder
  product_option_value: ProductOptionValueOrderByRelationAggregateInput
  taobao_pid: SortOrder
}

input ProductOptionNameUpdateInput {
  id: Int!
  name: String!
}

input ProductOptionNameWhereInput {
  AND: [ProductOptionNameWhereInput!]
  NOT: [ProductOptionNameWhereInput!]
  OR: [ProductOptionNameWhereInput!]
  has_image: BoolFilter
  id: IntFilter
  is_name_translated: BoolFilter
  name: StringFilter
  order: IntFilter
  product: ProductWhereInput
  product_id: IntFilter
  product_option_value: ProductOptionValueListRelationFilter
  taobao_pid: StringFilter
}

input ProductOptionNameWhereUniqueInput {
  id: Int
}

input ProductOptionOrderByRelationAggregateInput {
  _count: SortOrder
  count: SortOrder
}

input ProductOptionOrderByWithRelationInput {
  id: SortOrder
  is_active: SortOrder
  option_string: SortOrder
  option_value1_id: SortOrder
  option_value2_id: SortOrder
  option_value3_id: SortOrder
  price: SortOrder
  price_cny: SortOrder
  product: ProductOrderByWithRelationInput
  product_id: SortOrder
  product_option1: ProductOptionValueOrderByWithRelationInput
  product_option2: ProductOptionValueOrderByWithRelationInput
  product_option3: ProductOptionValueOrderByWithRelationInput
  stock: SortOrder
  taobao_sku_id: SortOrder
}

input ProductOptionUQ_product_id_sku_idCompoundUniqueInput {
  product_id: Int!
  taobao_sku_id: String!
}

input ProductOptionUQ_product_optionCompoundUniqueInput {
  option_value1_id: Int!
  option_value2_id: Int!
  option_value3_id: Int!
}

input ProductOptionUpdateInput {
  id: Int!
  isActive: Boolean!
  price: Int!
  stock: Int!
}

type ProductOptionValue {
  id: Int!
  image: String
  is_active: Boolean!
  is_name_translated: Boolean!
  name: String!
  number: Int!
  option_name_order: Int!
  option_value1(cursor: ProductOptionWhereUniqueInput, orderBy: [ProductOptionOrderByWithRelationInput!], skip: Int, take: Int, where: ProductOptionWhereInput): [ProductOption!]!
  option_value2(cursor: ProductOptionWhereUniqueInput, orderBy: [ProductOptionOrderByWithRelationInput!], skip: Int, take: Int, where: ProductOptionWhereInput): [ProductOption!]!
  option_value3(cursor: ProductOptionWhereUniqueInput, orderBy: [ProductOptionOrderByWithRelationInput!], skip: Int, take: Int, where: ProductOptionWhereInput): [ProductOption!]!
  productOption(cursor: ProductOptionWhereUniqueInput, orderBy: [ProductOptionOrderByWithRelationInput], skip: Int, take: Int, where: ProductOptionWhereInput): [ProductOption!]!
  product_option_name: ProductOptionName!
  taobao_vid: String!
}

input ProductOptionValueImageUpdateInput {
  id: Int!
  image: String
  newImageBase64: String
}

input ProductOptionValueListRelationFilter {
  every: ProductOptionValueWhereInput
  none: ProductOptionValueWhereInput
  some: ProductOptionValueWhereInput
}

input ProductOptionValueOrderByRelationAggregateInput {
  _count: SortOrder
  count: SortOrder
}

input ProductOptionValueOrderByWithRelationInput {
  id: SortOrder
  image: SortOrder
  is_active: SortOrder
  is_name_translated: SortOrder
  name: SortOrder
  number: SortOrder
  option_name_order: SortOrder
  option_value1: ProductOptionOrderByRelationAggregateInput
  option_value2: ProductOptionOrderByRelationAggregateInput
  option_value3: ProductOptionOrderByRelationAggregateInput
  product_option_name: ProductOptionNameOrderByWithRelationInput
  product_option_name_id: SortOrder
  taobao_vid: SortOrder
}

input ProductOptionValueUpdateInput {
  id: Int!
  image: String
  isActive: Boolean
  name: String!
  newImage: Upload
  newImageBase64: String
}

input ProductOptionValueWhereInput {
  AND: [ProductOptionValueWhereInput!]
  NOT: [ProductOptionValueWhereInput!]
  OR: [ProductOptionValueWhereInput!]
  id: IntFilter
  image: StringNullableFilter
  is_active: BoolFilter
  is_name_translated: BoolFilter
  name: StringFilter
  number: IntFilter
  option_name_order: IntFilter
  option_value1: ProductOptionListRelationFilter
  option_value2: ProductOptionListRelationFilter
  option_value3: ProductOptionListRelationFilter
  product_option_name: ProductOptionNameWhereInput
  product_option_name_id: IntFilter
  taobao_vid: StringFilter
}

input ProductOptionValueWhereUniqueInput {
  id: Int
}

input ProductOptionWhereInput {
  AND: [ProductOptionWhereInput!]
  NOT: [ProductOptionWhereInput!]
  OR: [ProductOptionWhereInput!]
  id: IntFilter
  is_active: BoolFilter
  option_string: StringFilter
  option_value1_id: IntFilter
  option_value2_id: IntNullableFilter
  option_value3_id: IntNullableFilter
  price: IntFilter
  price_cny: FloatFilter
  product: ProductWhereInput
  product_id: IntFilter
  product_option1: ProductOptionValueWhereInput
  product_option2: ProductOptionValueWhereInput
  product_option3: ProductOptionValueWhereInput
  stock: IntNullableFilter
  taobao_sku_id: StringFilter
}

input ProductOptionWhereUniqueInput {
  UQ_product_id_sku_id: ProductOptionUQ_product_id_sku_idCompoundUniqueInput
  UQ_product_option: ProductOptionUQ_product_optionCompoundUniqueInput
  id: Int
}

input ProductOrderByRelationAggregateInput {
  _count: SortOrder
  count: SortOrder
}

input ProductOrderByWithRelationInput {
  admin: AdminOrderByWithRelationInput
  admin_id: SortOrder
  category: CategoryOrderByWithRelationInput
  category_a001: SortOrder
  category_a001_name: SortOrder
  category_a006: SortOrder
  category_a006_name: SortOrder
  category_a027: SortOrder
  category_a027_name: SortOrder
  category_a077: SortOrder
  category_a077_name: SortOrder
  category_a112: SortOrder
  category_a112_name: SortOrder
  category_a113: SortOrder
  category_a113_name: SortOrder
  category_a524: SortOrder
  category_a524_name: SortOrder
  category_a525: SortOrder
  category_a525_name: SortOrder
  category_b378: SortOrder
  category_b378_name: SortOrder
  category_b719: SortOrder
  category_b719_name: SortOrder
  category_b956: SortOrder
  category_b956_name: SortOrder
  category_code: SortOrder
  category_esm: SortOrder
  cny_rate: SortOrder
  created_at: SortOrder
  description: SortOrder
  id: SortOrder
  image_thumbnail_data: SortOrder
  is_image_translated: SortOrder
  is_name_translated: SortOrder
  local_shipping_code: SortOrder
  local_shipping_fee: SortOrder
  margin_rate: SortOrder
  margin_unit_type: SortOrder
  modified_at: SortOrder
  name: SortOrder
  price: SortOrder
  product_code: SortOrder
  product_option: ProductOptionOrderByRelationAggregateInput
  product_option_name: ProductOptionNameOrderByRelationAggregateInput
  search_tags: SortOrder
  shipping_fee: SortOrder
  siil_code: SortOrder
  siil_data: SortOrder
  state: SortOrder
  stock_updated_at: SortOrder
  taobao_product: TaobaoProductOrderByWithRelationInput
  taobao_product_id: SortOrder
  user: UserOrderByWithRelationInput
  user_id: SortOrder
}

enum ProductState {
  COLLECTED
  ON_SALE
  SELL_DONE
  UPLOAD_FAILED
  UPLOAD_WAITING
}

input ProductThumbnailImageUpdateInput {
  defaultImage: String!
  uploadImageBase64: String
}

input ProductThumbnailUpdateInput {
  defaultImage: String!
  uploadImage: Upload
}

input ProductUQ_user_id_taobao_product_idCompoundUniqueInput {
  taobao_product_id: Int!
  user_id: Int!
}

input ProductWhereInput {
  AND: [ProductWhereInput!]
  NOT: [ProductWhereInput!]
  OR: [ProductWhereInput!]
  admin: AdminWhereInput
  admin_id: IntNullableFilter
  category: CategoryWhereInput
  category_a001: StringNullableFilter
  category_a001_name: StringNullableFilter
  category_a006: StringNullableFilter
  category_a006_name: StringNullableFilter
  category_a027: StringNullableFilter
  category_a027_name: StringNullableFilter
  category_a077: StringNullableFilter
  category_a077_name: StringNullableFilter
  category_a112: StringNullableFilter
  category_a112_name: StringNullableFilter
  category_a113: StringNullableFilter
  category_a113_name: StringNullableFilter
  category_a524: StringNullableFilter
  category_a524_name: StringNullableFilter
  category_a525: StringNullableFilter
  category_a525_name: StringNullableFilter
  category_b378: StringNullableFilter
  category_b378_name: StringNullableFilter
  category_b719: StringNullableFilter
  category_b719_name: StringNullableFilter
  category_b956: StringNullableFilter
  category_b956_name: StringNullableFilter
  category_code: StringNullableFilter
  category_esm: StringNullableFilter
  cny_rate: FloatFilter
  created_at: DateTimeFilter
  description: StringFilter
  id: IntFilter
  image_thumbnail_data: StringFilter
  is_image_translated: BoolFilter
  is_name_translated: BoolFilter
  local_shipping_code: IntNullableFilter
  local_shipping_fee: IntFilter
  margin_rate: FloatFilter
  margin_unit_type: StringNullableFilter
  modified_at: DateTimeFilter
  name: StringFilter
  price: IntFilter
  product_code: StringFilter
  product_option: ProductOptionListRelationFilter
  product_option_name: ProductOptionNameListRelationFilter
  search_tags: StringNullableFilter
  shipping_fee: IntFilter
  siil_code: StringNullableFilter
  siil_data: StringNullableFilter
  state: EnumProductStateFilter
  stock_updated_at: DateTimeFilter
  taobao_product: TaobaoProductWhereInput
  taobao_product_id: IntFilter
  user: UserWhereInput
  user_id: IntNullableFilter
}

input ProductWhereUniqueInput {
  UQ_user_id_taobao_product_id: ProductUQ_user_id_taobao_product_idCompoundUniqueInput
  id: Int
}

type PurchaseLog {
  expired_at: DateTime!
  id: Int!
  pay_amount: Int!
  pay_id: String
  plan_info: String!
  purchased_at: DateTime!
  state: PurchaseLogState!
  type: PurchaseLogType!
  user: User!
  user_id: Int!
}

input PurchaseLogListRelationFilter {
  every: PurchaseLogWhereInput
  none: PurchaseLogWhereInput
  some: PurchaseLogWhereInput
}

input PurchaseLogOrderByRelationAggregateInput {
  _count: SortOrder
  count: SortOrder
}

enum PurchaseLogState {
  ACTIVE
  ENDED
  REFUNDED
  WAIT_DEPOSIT
  WAIT_PAYMENT
}

enum PurchaseLogType {
  IMAGE_TRANSLATE
  PLAN
  STOCK
}

input PurchaseLogWhereInput {
  AND: [PurchaseLogWhereInput!]
  NOT: [PurchaseLogWhereInput!]
  OR: [PurchaseLogWhereInput!]
  expired_at: DateTimeFilter
  id: IntFilter
  pay_amount: IntFilter
  pay_id: StringNullableFilter
  plan_info: StringFilter
  purchased_at: DateTimeFilter
  state: EnumPurchaseLogStateFilter
  type: EnumPurchaseLogTypeFilter
  user: UserWhereInput
  user_id: IntFilter
}

type Query {
  selectMyInfoByUser: User!
  selectUsersByAdmin(cursor: UserWhereUniqueInput, orderBy: [UserOrderByWithRelationInput!], skip: Int, take: Int, where: UserWhereInput): [User!]!
  selectUsersCountByAdmin(where: UserWhereInput): Int!
  translateText(engine: TranslateEngineEnumType! = PAPAGO, text: String!): String!
  whoami: String
}

type SignInType {
  accessToken: String!
  refreshToken: String!
}

enum SortOrder {
  asc
  desc
}

input StringFilter {
  contains: String
  endsWith: String
  equals: String
  gt: String
  gte: String
  in: [String!]
  lt: String
  lte: String
  not: NestedStringFilter
  notIn: [String!]
  startsWith: String
}

input StringNullableFilter {
  contains: String
  endsWith: String
  equals: String
  gt: String
  gte: String
  in: [String!]
  lt: String
  lte: String
  not: NestedStringNullableFilter
  notIn: [String!]
  startsWith: String
}

enum TaobaoItemOrderBy {
  """판매자 신용 순"""
  CREDIT

  """판매량순"""
  SALE
}

type TaobaoProduct {
  brand: String!
  created_at: DateTime!
  id: Int!
  image_thumbnail: String!
  modified_at: DateTime!
  name: String!
  original_data: String!
  price: Float!
  product(cursor: ProductWhereUniqueInput, skip: Int, take: Int): [Product!]!
  taobao_brand_id: String
  taobao_category_id: String!
  taobao_num_iid: String!
  video_url: String
}

type TaobaoProductOption {
  name: String!
  taobaoSkuId: String!
}

type TaobaoProductOptionInfo {
  option: [TaobaoProductOption!]!
  optionName: [TaobaoProductOptionName!]!
  optionValue: [TaobaoProductOptionValue!]!
}

type TaobaoProductOptionName {
  name: String!
  taobaoPid: String!
}

type TaobaoProductOptionValue {
  image: String
  name: String!
  taobaoVid: String!
}

input TaobaoProductOrderByWithRelationInput {
  brand: SortOrder
  created_at: SortOrder
  id: SortOrder
  image_thumbnail: SortOrder
  modified_at: SortOrder
  name: SortOrder
  original_data: SortOrder
  price: SortOrder
  product: ProductOrderByRelationAggregateInput
  taobao_brand_id: SortOrder
  taobao_category_id: SortOrder
  taobao_num_iid: SortOrder
  translate_data: SortOrder
  video_url: SortOrder
}

input TaobaoProductWhereInput {
  AND: [TaobaoProductWhereInput!]
  NOT: [TaobaoProductWhereInput!]
  OR: [TaobaoProductWhereInput!]
  brand: StringFilter
  created_at: DateTimeFilter
  id: IntFilter
  image_thumbnail: StringFilter
  modified_at: DateTimeFilter
  name: StringFilter
  original_data: StringFilter
  price: FloatFilter
  product: ProductListRelationFilter
  taobao_brand_id: StringNullableFilter
  taobao_category_id: StringFilter
  taobao_num_iid: StringFilter
  translate_data: StringNullableFilter
  video_url: StringNullableFilter
}

enum TranslateEngineEnumType {
  BAIDU
  GOOGLE
  PAPAGO
}

enum TranslateTargetEnumType {
  """상품 전체 일괄번역,id:Product"""
  PRODUCT_ALL

  """상품 이름 번역,id:Product"""
  PRODUCT_NAME

  """상품 옵션 일괄번역,id:ProductOptionName"""
  PRODUCT_OPTION_ALL

  """상품 옵션 이름 번역,id:ProductOptionName"""
  PRODUCT_OPTION_NAME

  """상품 옵션별 이름 번역,id:ProductOptionValue"""
  PRODUCT_OPTION_VALUE
}

"""The `Upload` scalar type represents a file upload."""
scalar Upload

type User {
  created_at: DateTime!
  created_token: DateTime
  email: String!
  id: Int!
  kakao_id: String
  naver_id: String
  password: String
  product(cursor: ProductWhereUniqueInput, orderBy: [ProductOrderByWithRelationInput!], skip: Int, take: Int, where: ProductWhereInput): [Product!]!
  productCount: Int!
  purchaseInfo: UserPurchaseInfo!
  state: UserState!
  user_info: UserInfo
  user_log(cursor: UserLogWhereUniqueInput, orderBy: [UserLogOrderByWithRelationInput!], skip: Int, take: Int, where: UserLogWhereInput): [UserLog!]!
}

type UserInfo {
  additional_shipping_fee_jeju: Int!
  as_information: String
  as_tel: String
  auction_fee: Float!
  cny_rate: Float!
  collect_stock: Int!
  collect_timeout: Int!
  coupang_access_key: String!
  coupang_default_inbound: String!
  coupang_default_outbound: String!
  coupang_fee: Float!
  coupang_image_opt: String!
  coupang_login_id: String!
  coupang_maximum_buy_for_person: Int!
  coupang_outbound_shipping_time_day: Int!
  coupang_secret_key: String!
  coupang_union_delivery_type: String!
  coupang_vendor_id: String!
  default_shipping_fee: Int!
  description_show_title: String!
  discount_amount: Int
  discount_unit_type: String
  esmplus_auction_id: String!
  esmplus_gmarket_id: String!
  esmplus_master_id: String!
  exchange_shipping_fee: Int!
  extra_shipping_fee: Int!
  fix_image_bottom: String
  fix_image_top: String
  gmarket_fee: Float!
  interpark_cert_key: String!
  interpark_fee: Float!
  interpark_secret_key: String!
  lotteon_api_key: String!
  lotteon_fee: Float!
  lotteon_normal_fee: Float!
  lotteon_vendor_id: String!
  margin_rate: Float!
  margin_unit_type: String
  max_product_limit: Int
  naver_fee: Float!
  naver_origin: String!
  naver_origin_code: String!
  naver_store_only: String!
  naver_store_url: String!
  option_align_top: String!
  option_index_type: Int!
  option_twoways: String!
  phone: String
  product_collect_count: Int!
  refund_shipping_fee: Int!
  street_api_key: String!
  street_default_inbound: String!
  street_default_outbound: String!
  street_fee: Float!
  street_normal_api_key: String!
  street_normal_fee: Float!
  street_normal_inbound: String
  street_normal_outbound: String
  street_seller_type: Int!
  tmon_fee: Float!
  tmon_id: String
  user: User!
  user_id: Int!
  wemakeprice_fee: Float!
  wemakeprice_id: String!
}

input UserInfoOrderByWithRelationInput {
  additional_shipping_fee_jeju: SortOrder
  as_information: SortOrder
  as_tel: SortOrder
  auction_fee: SortOrder
  cny_rate: SortOrder
  collect_stock: SortOrder
  collect_timeout: SortOrder
  coupang_access_key: SortOrder
  coupang_default_inbound: SortOrder
  coupang_default_outbound: SortOrder
  coupang_fee: SortOrder
  coupang_image_opt: SortOrder
  coupang_login_id: SortOrder
  coupang_maximum_buy_for_person: SortOrder
  coupang_outbound_shipping_time_day: SortOrder
  coupang_secret_key: SortOrder
  coupang_union_delivery_type: SortOrder
  coupang_vendor_id: SortOrder
  default_shipping_fee: SortOrder
  description_show_title: SortOrder
  discount_amount: SortOrder
  discount_unit_type: SortOrder
  esmplus_auction_id: SortOrder
  esmplus_gmarket_id: SortOrder
  esmplus_master_id: SortOrder
  exchange_shipping_fee: SortOrder
  extra_shipping_fee: SortOrder
  fix_image_bottom: SortOrder
  fix_image_top: SortOrder
  gmarket_fee: SortOrder
  interpark_cert_key: SortOrder
  interpark_fee: SortOrder
  interpark_secret_key: SortOrder
  lotteon_api_key: SortOrder
  lotteon_fee: SortOrder
  lotteon_normal_fee: SortOrder
  lotteon_vendor_id: SortOrder
  margin_rate: SortOrder
  margin_unit_type: SortOrder
  max_product_limit: SortOrder
  naver_fee: SortOrder
  naver_origin: SortOrder
  naver_origin_code: SortOrder
  naver_store_only: SortOrder
  naver_store_url: SortOrder
  option_align_top: SortOrder
  option_index_type: SortOrder
  option_twoways: SortOrder
  phone: SortOrder
  product_collect_count: SortOrder
  refund_shipping_fee: SortOrder
  street_api_key: SortOrder
  street_default_inbound: SortOrder
  street_default_outbound: SortOrder
  street_fee: SortOrder
  street_normal_api_key: SortOrder
  street_normal_fee: SortOrder
  street_normal_inbound: SortOrder
  street_normal_outbound: SortOrder
  street_seller_type: SortOrder
  tmon_fee: SortOrder
  tmon_id: SortOrder
  user: UserOrderByWithRelationInput
  user_id: SortOrder
  wemakeprice_fee: SortOrder
  wemakeprice_id: SortOrder
}

input UserInfoWhereInput {
  AND: [UserInfoWhereInput!]
  NOT: [UserInfoWhereInput!]
  OR: [UserInfoWhereInput!]
  additional_shipping_fee_jeju: IntFilter
  as_information: StringNullableFilter
  as_tel: StringNullableFilter
  auction_fee: FloatFilter
  cny_rate: FloatFilter
  collect_stock: IntFilter
  collect_timeout: IntFilter
  coupang_access_key: StringFilter
  coupang_default_inbound: StringFilter
  coupang_default_outbound: StringFilter
  coupang_fee: FloatFilter
  coupang_image_opt: StringFilter
  coupang_login_id: StringFilter
  coupang_maximum_buy_for_person: IntFilter
  coupang_outbound_shipping_time_day: IntFilter
  coupang_secret_key: StringFilter
  coupang_union_delivery_type: StringFilter
  coupang_vendor_id: StringFilter
  default_shipping_fee: IntFilter
  description_show_title: StringFilter
  discount_amount: IntNullableFilter
  discount_unit_type: StringNullableFilter
  esmplus_auction_id: StringFilter
  esmplus_gmarket_id: StringFilter
  esmplus_master_id: StringFilter
  exchange_shipping_fee: IntFilter
  extra_shipping_fee: IntFilter
  fix_image_bottom: StringNullableFilter
  fix_image_top: StringNullableFilter
  gmarket_fee: FloatFilter
  interpark_cert_key: StringFilter
  interpark_fee: FloatFilter
  interpark_secret_key: StringFilter
  lotteon_api_key: StringFilter
  lotteon_fee: FloatFilter
  lotteon_normal_fee: FloatFilter
  lotteon_vendor_id: StringFilter
  margin_rate: FloatFilter
  margin_unit_type: StringNullableFilter
  max_product_limit: IntNullableFilter
  naver_fee: FloatFilter
  naver_origin: StringFilter
  naver_origin_code: StringFilter
  naver_store_only: StringFilter
  naver_store_url: StringFilter
  option_align_top: StringFilter
  option_index_type: IntFilter
  option_twoways: StringFilter
  phone: StringNullableFilter
  product_collect_count: IntFilter
  refund_shipping_fee: IntFilter
  street_api_key: StringFilter
  street_default_inbound: StringFilter
  street_default_outbound: StringFilter
  street_fee: FloatFilter
  street_normal_api_key: StringFilter
  street_normal_fee: FloatFilter
  street_normal_inbound: StringNullableFilter
  street_normal_outbound: StringNullableFilter
  street_seller_type: IntFilter
  tmon_fee: FloatFilter
  tmon_id: StringNullableFilter
  user: UserWhereInput
  user_id: IntFilter
  wemakeprice_fee: FloatFilter
  wemakeprice_id: StringFilter
}

type UserLog {
  created_at: DateTime!
  id: Int!
  is_read: Boolean!
  payload_data: String!
  title: String!
  user: User!
  user_id: Int!
}

input UserLogListRelationFilter {
  every: UserLogWhereInput
  none: UserLogWhereInput
  some: UserLogWhereInput
}

input UserLogOrderByRelationAggregateInput {
  _count: SortOrder
  count: SortOrder
}

input UserLogOrderByWithRelationInput {
  created_at: SortOrder
  id: SortOrder
  is_read: SortOrder
  payload_data: SortOrder
  title: SortOrder
  user: UserOrderByWithRelationInput
  user_id: SortOrder
}

input UserLogWhereInput {
  AND: [UserLogWhereInput!]
  NOT: [UserLogWhereInput!]
  OR: [UserLogWhereInput!]
  created_at: DateTimeFilter
  id: IntFilter
  is_read: BoolFilter
  payload_data: StringFilter
  title: StringFilter
  user: UserWhereInput
  user_id: IntFilter
}

input UserLogWhereUniqueInput {
  id: Int
}

enum UserLoginType {
  ADMIN
  EMAIL
  KAKAO
  NAVER
}

input UserOrderByWithRelationInput {
  created_at: SortOrder
  created_token: SortOrder
  email: SortOrder
  id: SortOrder
  kakao_id: SortOrder
  naver_id: SortOrder
  password: SortOrder
  product: ProductOrderByRelationAggregateInput
  purchase_log: PurchaseLogOrderByRelationAggregateInput
  state: SortOrder
  token: SortOrder
  user_info: UserInfoOrderByWithRelationInput
  user_log: UserLogOrderByRelationAggregateInput
}

type UserPurchaseAdditionalInfo {
  expiredAt: DateTime!
  type: UserPurchaseAdditionalInfoEnumType!
}

enum UserPurchaseAdditionalInfoEnumType {
  IMAGE_TRANSLATE
  STOCK
}

type UserPurchaseInfo {
  additionalInfo: [UserPurchaseAdditionalInfo!]!
  level: Int!
  levelExpiredAt: DateTime!
}

enum UserSocialType {
  EMAIL
  KAKAO
  NAVER
}

enum UserState {
  ACTIVE
  DELETED
}

input UserWhereInput {
  AND: [UserWhereInput!]
  NOT: [UserWhereInput!]
  OR: [UserWhereInput!]
  created_at: DateTimeFilter
  created_token: DateTimeNullableFilter
  email: StringFilter
  id: IntFilter
  kakao_id: StringNullableFilter
  naver_id: StringNullableFilter
  password: StringFilter
  product: ProductListRelationFilter
  purchase_log: PurchaseLogListRelationFilter
  state: EnumUserStateFilter
  token: StringNullableFilter
  user_info: UserInfoWhereInput
  user_log: UserLogListRelationFilter
}

input UserWhereUniqueInput {
  email: String
  id: Int
  kakao_id: String
  naver_id: String
  token: String
}
